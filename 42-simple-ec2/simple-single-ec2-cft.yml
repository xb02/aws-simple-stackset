---

# 
# Filename    : simple-single-ec2-cft.yml
# Date        : 05 Mar 2019
# Author      : Balaji Venkataraman (xbalaji@gmail.com)
# Description : create a simple single ec2 instance with tags etc.
#
# Usage:
#   AWS console->CloudFormation->Create stack->upload this file
#   Output tab will display the IP address of the instance
#

AWSTemplateFormatVersion: "2010-09-09"
Description: "Simple one EC2 instance on a publicly reachable subnet"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: {default: "General tags"}
        Parameters: [pMyIp, pEnvironment, pBusinessUnit]
      - Label: {default: "Instance configuration"}
        Parameters: [pInstanceType, pOsType, pKeyName]
      - Label: {default: "Network related configuration"}
        Parameters: [pVpcId, pPubSubnetAZ]
    ParameterLabels:
      pMyIp: {default: "IP address CIDR"}
      pEnvironment: {default: "Environment" }
      pBusinessUnit: {default: "Business organization" }
      pInstanceType: {default: "Instance Type" }
      pOsType: {default: "Operating system" }
      pKeyName: {default: "Key pair" }
      pVpcId: {default: "VPC to use" }
      pPubSubnetAZ: {default: "Public Subnet to use in Availability Zone" }

Parameters:
  pMyIp:
    Description: "Current system's IP check using, http://checkip.amazonaws.com/ "
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: "0.0.0.0/0"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "Must be a valid IP CIDR range of the form x.x.x.x/x."
  pEnvironment:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - Prod
      - Tools
  pBusinessUnit:
    Type: String
    Default: BU1
    AllowedValues:
      - BU1
      - BU2
  pInstanceType: 
    Description: "EC2 instance type"
    Default: t2.small
    Type: String
    AllowedValues: 
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
  pOsType:
    Description: "Amazon Linux only (cf-init)"
    Type: String
    Default: AwsLinux
    AllowedValues: 
      - AwsLinux
  pKeyName:
    Description: "The EC2 Key Pair to allow SSH access to the instance"
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "xb_aws_pge_gen01"
  pVpcId:
    Description: "VPC for this instance"
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/Vpc/Dev/id"
  pPubSubnetAZ:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: "Public subnet for this instance, in the availablity zone"
    Default: "/Vpc/Dev/Pub/Subnet/AZa"

Mappings:
  OsToAMIID:
    AwsLinux:
      # https://aws.amazon.com/marketplace/pp/B00CIYTQTC
      "id": "ami-0ad99772"

Resources:
  rSshHttpHttpsSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH, HTTP, HTTPS - xbalaji"
      VpcId: !Ref pVpcId
      #VpcId: "{{resolve:ssm:/Vpc/${pEnvironment}/id}}"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref pMyIp
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref pMyIp
        - IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: !Ref pMyIp
        - IpProtocol: "tcp"
          FromPort: "8080"
          ToPort: "8080"
          CidrIp: !Ref pMyIp
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: pBusinessUnit
                - Ref: pEnvironment
                - "SG"
        - Key: BusinessUnit
          Value: !Ref pBusinessUnit
        - Key: Environment
          Value: !Ref pEnvironment
  rEc2InstancePub1:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [OsToAMIID, !Ref pOsType, "id" ]
      InstanceType: !Ref pInstanceType
      KeyName: !Ref pKeyName
      SubnetId: !Join [ "", [ "", !Ref pPubSubnetAZ ] ]
      SecurityGroupIds: [ !GetAtt [ rSshHttpHttpsSG, GroupId ] ]
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -x
          yum update -y
          mkdir -p /tmp/wsgi
          ifconfig -a > /tmp/wsgi/ifconfig.txt
          cd /tmp/wsgi; screen -dmS pyserv python -m SimpleHTTPServer 80
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: pBusinessUnit
                - Ref: pEnvironment
                - "EC2"
        - Key: BusinessUnit
          Value: !Ref pBusinessUnit
        - Key: Environment
          Value: !Ref pEnvironment

Outputs:
  oEc2Pub1Az:
    Value: !Join [ "", [ "", !GetAtt rEc2InstancePub1.AvailabilityZone ] ]
  oEc2Pub1PrvIp4: 
    Value: !Join [ "", [ "", !GetAtt rEc2InstancePub1.PrivateIp ] ]
  oEc2Pub1PrvName:
    Value: !Join [ "", [ "", !GetAtt rEc2InstancePub1.PrivateDnsName ] ]
  oEc2Pub1PubIpv4: 
    Value: !Join [ "", [ "", !GetAtt rEc2InstancePub1.PublicIp ] ]
  oEc2Pub1PubName:
    Value: !Join [ "", [ "", !GetAtt rEc2InstancePub1.PublicDnsName ] ]


